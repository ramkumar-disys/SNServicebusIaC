name: 'Terraform'
on:
  workflow_dispatch:
#  push:
#    branches:
#    - main
#  pull_request:

 
jobs:
  terraform:
    name: 'Terraform'
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      # SB_CONN_STRING: ${{ secrets.SB_CONN_STRING }}

    runs-on: ubuntu-latest
    environment: dev
 
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
 
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
 
  #  - name: 'Terraform Format'
  #    uses: hashicorp/terraform-github-actions@master
   #   with:
    #    tf_actions_version: 0.14.8
     #   tf_actions_subcommand: 'fmt'
      #  tf_actions_working_dir: "./environments/dev/vm"
         
    - name: 'Terraform Init'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.14.8
        tf_actions_subcommand: 'init'
        tf_actions_working_dir: "./terraform-files"
        backend-config: resource_group_name = "NttRG" \
                        storage_account_name = "servicebusstracc1" \
                        container_name       = "servicebuscontainer" \
                        key                  = "terraform.tfstate"
        # backend-config: resource_group_name =${{ secrets.AZURE_RESOURCE_GROUP }} \
        #                 storage_account_name =${{ secrets.AZURE_STORAGE_ACCOUNT }} \
        #                 container_name       =${{ secrets.AZURE_CONTAINER_NAME }} \
        #                 key                  =${{ secrets.AZURE_KEY }}
        #args: -var-file="dev.tfvars"
             # -backend-config="backend.tfvars"
         
    - name: 'Terraform Validate'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.14.8
        tf_actions_subcommand: 'validate'
        tf_actions_working_dir: "./terraform-files"
         
    - name: 'Terraform Plan'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.14.8
        tf_actions_subcommand: 'plan'
        tf_actions_working_dir: "./terraform-files"
        backend-config: resource_group_name =${{ secrets.AZURE_RESOURCE_GROUP }} \
                        storage_account_name =${{ secrets.AZURE_STORAGE_ACCOUNT }} \
                        container_name       =${{ secrets.AZURE_CONTAINER_NAME }} \
                        key                  =${{ secrets.AZURE_KEY }}
    
    - name: Terraform Apply
      if: github.ref == 'refs/heads/main'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.14.8
        tf_actions_subcommand: 'apply'
        tf_actions_working_dir: "./terraform-files"
        backend-config: resource_group_name =${{ secrets.AZURE_RESOURCE_GROUP }} \
                        storage_account_name =${{ secrets.AZURE_STORAGE_ACCOUNT }} \
                        container_name       =${{ secrets.AZURE_CONTAINER_NAME }} \
                        key                  =${{ secrets.AZURE_KEY }}
    
    # - name: Terraform Destroy
    #   if: github.ref == 'refs/heads/main'
    #   uses: hashicorp/terraform-github-actions@master
    #   with:
    #     tf_actions_version: 0.14.8
    #     tf_actions_subcommand: 'destroy'
    #     tf_actions_working_dir: "./terraform-files"
    #     backend-config: resource_group_name =${{ secrets.AZURE_RESOURCE_GROUP }} \
    #                     storage_account_name =${{ secrets.AZURE_STORAGE_ACCOUNT }} \
    #                     container_name       =${{ secrets.AZURE_CONTAINER_NAME }} \
    #                     key                  =${{ secrets.AZURE_KEY }}
